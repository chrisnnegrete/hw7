// CLICK CANVAS TO START!

var enterprise;
var rotation;
var bridgeSound;
var thruster;
var engine;

function preload() {
  soundFormats("mp3");
  bridgeSound = loadSound("Bridge_Sound.mp3");
  thruster = loadSound("Thruster.mp3");
}

function setup() {
  createCanvas(400, 400);
  enterprise = new Enterprise();

  bridgeSound.loop();
  bridgeSound.setVolume(0.05);
}

// Draw loop that creates the background canvas color and ship
function draw() {
  background(0, 0, 40, 40);
  enterprise.render();
  enterprise.turn();
  enterprise.update();
  enterprise.edges();
}

function keyReleased() {
  enterprise.setRotation(0);
  thruster.pause();
  enterprise.engine(false);
}

// Turns the ship
function keyPressed() {
  if (keyCode == RIGHT_ARROW) {
    enterprise.setRotation(0.03);
    thruster.loop();
    thruster.setVolume(1);
  } else if (keyCode == LEFT_ARROW) {
    enterprise.setRotation(-0.03);
    thruster.loop();
    thruster.setVolume(1);
    // Boosts the ship
  } else if (keyCode == UP_ARROW) {
    enterprise.engine(true);
    thruster.loop();
    thruster.setVolume(1);
  }
}

function Enterprise() {
  this.pos = createVector(width / 2, height / 2);
  this.r = 20;
  this.heading = 0;
  this.rotation = 0;
  this.vel = createVector(1, 0);
  this.isEngine = false;

  this.engine = function(b) {
    this.isEngine = b;
  }

  this.update = function() {
    if (this.isEngine) {
      this.engine();
    }
    this.pos.add(this.vel);
    this.vel.mult(0.99);
  }
  this.engine = function() {
    var force = p5.Vector.fromAngle(this.heading);
    this.vel.add(force);
  }

  // Creates the ship position and shape
  this.render = function() {
    translate(this.pos.x, this.pos.y);
    rotate(this.heading + (PI / 2));
    fill(255);
    noStroke();
    ellipse(-this.r + 20, this.r - 20, this.r + 2);
    rect(-this.r + 18, this.r - 16, this.r - 16, this.r);
    rect(-this.r + 11, this.r - 5, this.r - 17, this.r);
    rect(-this.r + 26, this.r - 5, this.r - 17, this.r);
    rect(-this.r + 12, this.r, this.r - 5, this.r - 18);

    // Draws the stars
    strokeWeight(random(1, 5));
    stroke(255);
    point(random(-400, 200), random(200, -400));
  }

  // Allows Enterprise to appear on the canvas again after it falls off the edge boundaries
  this.edges = function() {
    if (this.pos.x > width + this.r) {
      this.pos.x = -this.r;
    } else if (this.pos.x < -this.r) {
      this.pos.x = width + this.r;
    }
    if (this.pos.y > height + this.r) {
      this.pos.y = -this.r;
    } else if (this.pos.y < -this.r) {
      this.pos.y = height + this.r;
    }
  }

  this.setRotation = function(a) {
    this.rotation = a;
  }

  this.turn = function() {
    this.heading += this.rotation;
  }
}
